-- look at the dataset
SELECT **
FROM FOOD_PRODUCT; 

-- list of production facilities in Gangwon-do
SELECT FACTORY_ID, FACTORY_NAME, ADDRESS
FROM FOOD_FACTORY
WHERE ADDRESS LIKE '강원도%'
ORDER BY FACTORY_ID ASC;

-- food storage facilities in Gyeonggi-do
SELECT WAREHOUSE_ID, WAREHOUSE_NAME, ADDRESS, 
    IFNULL(FREEZER_YN,'N') AS FREEZER_YN
FROM FOOD_WAREHOUSE 
WHERE ADDRESS LIKE '경기도%'
ORDER BY WAREHOUSE_ID ASC;

-- the information of the most expensive food item
SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_CD, CATEGORY, PRICE
FROM FOOD_PRODUCT
ORDER BY PRICE DESC LIMIT 1;

-- Classify and display order statuses based on conditions
SELECT ORDER_ID,
       PRODUCT_ID,
       DATE_FORMAT(OUT_DATE,'%Y-%m-%d'), 
       CASE
        WHEN DATE_FORMAT(OUT_DATE,'%Y-%m-%d') <= '2022-05-01' THEN '출고완료'
        WHEN DATE_FORMAT(OUT_DATE,'%Y-%m-%d') > '2022-05-01' THEN '출고대기'
        ELSE '출고미정' END 출고여부
FROM  FOOD_ORDER
ORDER BY  ORDER_ID ;

-- the most expensive food item in each food category
WITH PR AS (
    SELECT CATEGORY, MAX(PRICE) AS MAX_PRICE
    FROM FOOD_PRODUCT
    WHERE CATEGORY IN ('과자', '국', '김치', '식용유')
    GROUP BY CATEGORY
)

SELECT P.CATEGORY, P.MAX_PRICE, FD.PRODUCT_NAME
FROM PR AS P 
INNER JOIN FOOD_PRODUCT AS FD ON P.CATEGORY=FD.CATEGORY
AND P.MAX_PRICE = FD.PRICE
ORDER BY P.MAX_PRICE DESC;

--  the total sales of food items in May
SELECT O.PRODUCT_ID, P.PRODUCT_NAME, P.PRICE * SUM(AMOUNT) AS TOTAL_SALES
FROM FOOD_ORDER AS O
    INNER JOIN FOOD_PRODUCT AS P
    ON O.PRODUCT_ID = P.PRODUCT_ID
WHERE DATE_FORMAT(O.PRODUCE_DATE, '%Y-%m') = '2022-05'
GROUP BY O.PRODUCT_ID
ORDER BY TOTAL_SALES DESC, O.PRODUCT_ID;
















