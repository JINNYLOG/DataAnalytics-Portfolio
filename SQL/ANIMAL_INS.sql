-- look at the dataset
SELECT *
FROM ANIMAL_INS

-- Identify animals marked as sick or unwell
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'Sick'
ORDER BY ANIMAL_ID;

-- Order by descending
SELECT NAME, DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC;

-- Find young animals
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION <> 'Aged'
ORDER BY ANIMAL_ID ;

-- the minimum value
SELECT MIN(DATETIME)
FROM ANIMAL_INS;

-- the maximum value
SELECT MAX(DATETIME)
FROM ANIMAL_INS;

-- animal IDs where the name is missing
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL
ORDER BY ANIMAL_ID ASC;

-- IDs of animals with a name
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
ORDER BY ANIMAL_ID ASC;

-- How many cats and dogs are there?
SELECT ANIMAL_TYPE,count(Animal_type) as count
from animal_ins
group by animal_type
order by Animal_type Asc;

-- how many animals share the same name
SELECT NAME, COUNT(NAME) AS COUNT
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME) >= 2
ORDER BY NAME ASC;

-- Sort by multiple columns
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY NAME ASC, DATETIME DESC;

-- Top n records
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME LIMIT 1;

-- Find Lucy and Ella
SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
WHERE NAME IN ('Lucy', 'Ella', 'Pickle', 'Rogan', 'Sabrina', 'Mitty');

-- animals whose names contain 'el'
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE NAME LIKE '%EL%' AND ANIMAL_TYPE = 'Dog'
ORDER BY NAME ASC;

-- the number of animals
SELECT COUNT(ANIMAL_ID)
FROM ANIMAL_INS;

-- Remove duplicates
SELECT COUNT(DISTINCT NAME)
FROM ANIMAL_INS
HAVING COUNT(NAME) >= 2;

-- Check neutering status
SELECT
    ANIMAL_ID
    , NAME
    , IF(SEX_UPON_INTAKE LIKE 'Neutered%' 
         OR SEX_UPON_INTAKE LIKE 'Spayed%', 'O', 'X') AS 중성화
FROM ANIMAL_INS
ORDER BY ANIMAL_ID

-- the adoption time (1)
SELECT  HOUR(DATETIME) AS HOUR, 
        COUNT(ANIMAL_ID) AS COUNT
FROM  ANIMAL_OUTS
GROUP BY  HOUR(DATETIME)
HAVING  HOUR >= 9 AND HOUR <= 19 
ORDER BY  HOUR(DATETIME);

-- Convert DATETIME to DATE
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME,'%Y-%m-%d') AS DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID ASC;

-- Query missing entries from the dataset
SELECT AO.ANIMAL_ID,AO.NAME
FROM ANIMAL_OUTS AS AO
LEFT JOIN ANIMAL_INS AS AI ON AI.ANIMAL_ID=AO.ANIMAL_ID
WHERE AO.ANIMAL_ID IS NOT NULL AND AI.ANIMAL_ID IS NULL
ORDER BY AO.ANIMAL_ID; 

--  the animal with the longest shelter duration (1)
SELECT NAME, DATETIME FROM ANIMAL_INS 
WHERE ANIMAL_ID NOT IN (SELECT ANIMAL_ID FROM ANIMAL_OUTS)
ORDER BY DATETIME LIMIT 3;

#SELECT A.NAME, A.DATETIME FROM ANIMAL_INS A
#LEFT JOIN ANIMAL_OUTS B ON A.ANIMAL_ID = B.ANIMAL_ID
#WHERE B.ANIMAL_ID IS NULL
#ORDER BY A.DATETIME LIMIT 3;

-- the animal with the longest shelter duration (2)
SELECT I.ANIMAL_ID, I.NAME
FROM ANIMAL_INS AS I
    INNER JOIN ANIMAL_OUTS AS O 
    ON I.ANIMAL_ID = O.ANIMAL_ID
ORDER BY DATEDIFF(O.DATETIME, I.DATETIME) DESC
LIMIT 2;

-- Animals neutered at the shelter
FROM ANIMAL_INS AI,
      ANIMAL_OUTS AO
WHERE AI.ANIMAL_ID = AO.ANIMAL_ID
AND AI.ANIMAL_ID IN 
      (SELECT ANIMAL_ID
       FROM ANIMAL_INS 
       WHERE SEX_UPON_INTAKE NOT IN('Neutered Male','Spayed Female')
         )
AND AO.SEX_UPON_OUTCOME IN('Neutered Male','Spayed Female')
ORDER BY AI.ANIMAL_ID;

-- the adoption time (2)
WITH RECURSIVE cte AS (
    SELECT 0 AS n
    UNION ALL
    SELECT n+1 FROM cte WHERE n < 23)

SELECT n 'HOUR', 0
FROM cte
WHERE n NOT IN (SELECT HOUR(DATETIME) HOUR
    FROM ANIMAL_OUTS
    GROUP BY HOUR)
UNION ALL
SELECT HOUR(DATETIME) HOUR, COUNT(ANIMAL_ID) COUNT
FROM ANIMAL_OUTS
GROUP BY HOUR
ORDER BY HOUR;

-- 























